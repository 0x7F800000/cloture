
changed func_t in XXVM_Execute functions to size_t

when isNative in the program is set to true, the "size_t func"
parameter will be interpreted as a function pointer of type "void (*)(Program)"

since all function offsets are accessed through the PRVM_serverfunction, PRVM_clientfunction, 
PRVM_menufunction, etc macros, the solution is to just redefine them

original definitions:
#define PRVM_allfunction(funcname)           (prog->funcoffsets.funcname)
#define PRVM_drawfunction(funcname)           (prog->funcoffsets.funcname)
#define PRVM_gamefunction(funcname)           (prog->funcoffsets.funcname)
#define PRVM_serverfunction(funcname)           (prog->funcoffsets.funcname)
#define PRVM_clientfunction(funcname)           (prog->funcoffsets.funcname)
#define PRVM_menufunction(funcname)           (prog->funcoffsets.funcname)

there is a problematic one, PRVM_GLOBALFIELDFUNCTION, but it looks like its unused thankfully


the solution is something like this

#define PRVM_serverfunction(funcname)           \
(prog->isNative ? prog->LookupFunction(#funcname) : prog->funcoffsets.funcname)

need to check the results of each of the function getters to make sure that
the result is never cached in a func_t variable or anything other than size_t

so far cleared:
	PRVM_allfunction (used)
	PRVM_drawfunction (unused)
	PRVM_gamefunction (unused)
	PRVM_serverfunction (used)
	PRVM_clientfunction (used)
	PRVM_menufunction (used)
	
changed some stuff to check if isNative is true to prevent segfaults
Program::LookupFunction should return a pointer to the function pointer, for compatability
with some parts of the code (manually NULL'ing out global quakeC functions)

